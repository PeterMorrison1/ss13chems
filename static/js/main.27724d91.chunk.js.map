{"version":3,"sources":["components/TagSelector.js","pages/Browser.js","pages/Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Option","Select","OptGroup","TagSelector","tagData","handleChange","mode","allowclear","placeholder","style","width","onChange","map","category","label","slice","tag","value","List","styled","ul","ListContainer","div","li","Name","span","Browser","button","recipeData","setRecipe","useState","recipes","data","setData","setTagData","element","name","type","shape","icon","PlusOutlined","onClick","tags","marginTop","fontFamily","ingredients","useEffect","tagStuff","tagCategory","push","Object","keys","forEach","key","index","console","log","length","newData","filter","i","includes","Recipes","recipeList","viewedRecipe","setViewedRecipe","sources","s","marginLeft","padding","textAlign","recipe","tag2","t","theme","light_main","light_accent","dark_main","dark_accent","Container","MainItem","SecondaryItem","App","className","Recipe","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27724d91.chunk.js","sourcesContent":["import { React, useState } from 'react';\r\nimport styled from 'styled-components';\r\n// import data from '../data.json';\r\n// import tagdata from '../tags.json'\r\nimport { PlusOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { Button, Divider, Tag, Select } from 'antd';\r\n\r\nconst { Option, OptGroup } = Select;\r\n\r\n\r\nconst TagSelector = ({ tagData, handleChange }) => {\r\n\r\n    // const [data, setData] = useState(tagData)\r\n\r\n    // Sets the tag select list\r\n    // let tagStuff = []\r\n    // data.tags.map((category) => {\r\n    //     for (let element in category) {\r\n    //         let tagCategory = []\r\n    //         tagCategory.push(element);\r\n    //         Object.keys(category[element]).forEach(function (key, index) {\r\n    //             tagCategory.push(key);\r\n    //             return <Option value={key}>{key}</Option>\r\n    //         })\r\n    //         tagStuff.push(tagCategory);\r\n    //     }\r\n    // })\r\n\r\n    // Declare a new state variable, which we'll call \"count\"  const [count, setCount] = useState(0);\r\n    return (\r\n        <Select\r\n            mode=\"multiple\"\r\n            allowclear='true'\r\n            placeholder=\"Please select\"\r\n            style={{ width: '100%' }}\r\n            onChange={handleChange}\r\n        >\r\n            {\r\n                tagData.map((category) =>\r\n                    <OptGroup label={category[0]}>\r\n                        {category.slice(1).map((tag) => <Option key={tag} value={tag}>{tag}</Option>)}\r\n                    </OptGroup>\r\n                )\r\n            }\r\n        </Select>\r\n    );\r\n}\r\n\r\nexport default TagSelector","import { React, useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\n// import data from '../data.json';\r\n// import tagdata from '../tags.json'\r\nimport { PlusOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { Button, Divider, Tag, Select } from 'antd';\r\nimport TagSelector from '../components/TagSelector'\r\n\r\nconst { Option, OptGroup } = Select;\r\n\r\nconst List = styled.ul`\r\n    list-style-type: none;\r\n    padding-left: 1vw;\r\n    margin: 0;\r\n    flex-grow: 2;\r\n    overflow: scroll;\r\n    max-height: 89vh;\r\n`;\r\n\r\n\r\nconst BrowserContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst ListContainer = styled.li`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nconst Name = styled.span`\r\n    width: 80%;\r\n    padding-bottom: 2vh;\r\n    font-family: 'Courier New', 'Courier', 'monospace' !important;\r\n    font-size: medium;\r\n`\r\n\r\nconst ListTags = styled.div`\r\n    flex-grow: 0;\r\n`\r\n\r\nconst mTag = styled.button`\r\n    flex-grow: 0;\r\n    align-self: flex-end;\r\n    \r\n`\r\n\r\n\r\nconst Browser = ({ recipeData, setRecipe }) => {\r\n\r\n    const [data, setData] = useState(recipeData.recipes)\r\n    const [tagData, setTagData] = useState([])\r\n\r\n    // const handleRecipeClick = useCallback(() => setRecipe())\r\n\r\n    // const [recipe, setRecipe] = useState(null)\r\n    const recipeTags = recipeData.recipes.map((element) =>\r\n        <Tag key={element.name}>{element.name}</Tag>\r\n    );\r\n\r\n    function handleChangeTagSelector(value) {\r\n        if (value.length === 0) {\r\n            setData(recipeData.recipes)\r\n        } else {\r\n            let newData = recipeData.recipes.filter((tags) => {\r\n                for (var i = 0; i < value.length; i++) {\r\n                    if (tags.tags.includes(value[i])) {\r\n                        return true\r\n                    }\r\n                }\r\n                return false\r\n            })\r\n            console.log(newData)\r\n            setData(newData)\r\n        }\r\n    }\r\n    \r\n    const recipes = data.map((element) =>\r\n        <ListContainer key={element.name + element.ingredients}>\r\n            <Name>{element.name}</Name>\r\n            <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} onClick={()=>setRecipe(element)}/>\r\n\r\n            {\r\n                element.tags.map((tag) =>\r\n                    <Tag key={tag} style={{ marginTop: '1vh', fontFamily: ['Courier New', 'Courier', 'monospace']}}>{tag}</Tag>\r\n                )\r\n            }\r\n            <Divider />\r\n        </ListContainer>\r\n    );\r\n\r\n    // Sets the tag select list\r\n    useEffect(() => {\r\n        recipeData.tags.map((category) => {\r\n            let tagStuff = []\r\n            for (let element in category) {\r\n                let tagCategory = []\r\n                tagCategory.push(element);\r\n                Object.keys(category[element]).forEach(function (key, index) {\r\n                    tagCategory.push(key);\r\n                })\r\n                tagStuff.push(tagCategory)\r\n            }\r\n            // setTagData(oldArray => [...oldArray, tagStuff]);\r\n            setTagData(tagStuff)\r\n            console.log(tagData)\r\n        })\r\n    }, [])\r\n\r\n    // Declare a new state variable, which we'll call \"count\"  const [count, setCount] = useState(0);\r\n    return (\r\n        <div>\r\n            {/* <ul style={{listStyleType: \"none\"}}>{recipes}</ul> */}\r\n            <span style={{fontFamily: ['Courier New', 'Courier', 'monospace']}}>Recipes</span>\r\n            <TagSelector tagData={tagData} handleChange={handleChangeTagSelector} />\r\n\r\n            <Divider />\r\n            <List >{recipes}</List>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Browser","import { React, useState, useEffect } from 'react';\r\nimport { Tag } from 'antd';\r\n\r\n\r\nconst Recipes = ({ recipeData, setRecipe, recipeList }) => {\r\n    const [viewedRecipe, setViewedRecipe] = useState(recipeData)\r\n    const [info, setInfo] = useState([\"\"])\r\n\r\n    useEffect(() => {\r\n        setViewedRecipe(recipeData);\r\n    }, [recipeData])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log(viewedRecipe)\r\n    //     let infoStuff = []\r\n    //     Object.keys(viewedRecipe.info).forEach(function (key, index) {\r\n    //         infoStuff.push(key);\r\n    //     })\r\n    //     console.log(infoStuff)\r\n    //     setInfo(infoStuff)\r\n\r\n    // }, [])\r\n\r\n    return (\r\n        <div>\r\n            {console.log(recipeList.recipes.filter(element => element.name.includes(\"Char\")))}\r\n            <h1>{viewedRecipe.name}</h1>\r\n            <h2>Sources:</h2><ul>{viewedRecipe.sources && viewedRecipe.sources.map(s => <li><span>{s}</span></li>)}</ul>\r\n            <h2>Tags: <br />{viewedRecipe.tags.map(tag =>\r\n                <Tag key={tag} style={{ marginTop: '1vh', fontFamily: ['Courier New', 'Courier', 'monospace'] }}>{tag}</Tag>)\r\n            }</h2>\r\n\r\n            <h2>Instructions:</h2><ol style={{ marginLeft: '30%', padding: 0, textAlign: 'left' }}>{viewedRecipe.recipe && viewedRecipe.recipe.map(tag =>\r\n                <li key={tag.name} style={{ marginTop: '1vh', fontFamily: ['Courier New', 'Courier', 'monospace'] }}>\r\n                    {tag}\r\n                    <br /><ul>{recipeList.recipes.filter(element => tag.includes(element.name)) && recipeList.recipes.filter(element => tag.includes(element.name)).map(tag2 =>\r\n                        \r\n                        tag2.recipe != null ?\r\n                            tag2.recipe.map(t => \r\n                                <li key={t} style={{ marginTop: '1vh', fontFamily: ['Courier New', 'Courier', 'monospace'] }}>{\r\n                                    t\r\n\r\n                                }</li>\r\n                            )\r\n                            :\r\n                            tag2.sources != null ?\r\n                            tag2.sources.map(t => \r\n                                <li key={t} style={{ marginTop: '1vh', fontFamily: ['Courier New', 'Courier', 'monospace'] }}>{\r\n                                    t\r\n\r\n                                }</li>\r\n                            )\r\n                            : \r\n                            tag2.ingredients.map(t => \r\n                                <li key={t} style={{ marginTop: '1vh', fontFamily: ['Courier New', 'Courier', 'monospace'] }}>{\r\n                                    t\r\n\r\n                                }</li>\r\n                            )\r\n\r\n                        /*<li key={tag2.name} style={{ marginTop: '1vh', fontFamily: ['Courier New', 'Courier', 'monospace'] }}>{\r\n                            tag2.recipe != null ? tag2.recipe : tag2.sources\r\n\r\n                        }</li>*/\r\n\r\n                    )\r\n                    }</ul>\r\n                    {/* {\r\n                    tag\r\n                    \r\n                } */}\r\n                </li>)\r\n            }</ol>\r\n\r\n            {/* <h3>Tags:</h3>{viewedRecipe.tags.map(t => <><span>{t}</span><br/></>)} */}\r\n            {/* <h3>Tags:</h3>{viewedRecipe.ingredients.map(i => <><span>{i}</span><br/></>)} */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Recipes","import React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport styled from 'styled-components';\nimport './App.css';\nimport Browser from './pages/Browser';\nimport Recipe from './pages/Recipe';\nimport 'antd/dist/antd.css';\n// import data from './data.json'\nimport data from './data2.json';\n\nconst theme = {\n  light_main: \"#ffffff\",\n  light_accent: \"#9edbd8\",\n  dark_main: \"#aaaaaa\",\n  dark_accent: \"#9edbd8\"\n}\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst MainItem = styled.div`\n  flex-grow: 4;\n`\n\nconst SecondaryItem = styled.div`\n  flex-grow: 0;\n  width: 20%;\n`\n\n\n\nfunction App() {\n  const [recipe, setRecipe] = useState(data.recipes[0])\n  // console.log(data.recipes[0])\n  // setRecipe(data.recipes[0])\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Container>\n          <SecondaryItem><Browser setRecipe={setRecipe} recipeData={data} /></SecondaryItem>\n          <MainItem><Recipe setRecipe={setRecipe} recipeData={recipe} recipeList={data}/></MainItem>\n          {/* <SecondaryItem><Browser setRecipe={setRecipe} recipeData={data}/></SecondaryItem> */}\n        </Container>\n      </ThemeProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}